set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set-option -g detach-on-destroy off
set -g history-limit 50000
set -g focus-events on

unbind [
unbind p
unbind C-x
unbind C-b
unbind C-r
unbind -n C-j
unbind -n C-k
unbind Space

set -g prefix C-a
bind C-a send-prefix

# reload config file
bind r source-file ~/.tmux.conf \; display " => Config reloaded"
bind C-r source-file ~/.tmux.conf \; display " => Config reloaded"

# pane splitting
bind = split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# move between panes
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

# bind -n M-C-- resize-pane -U 5
# bind -n M-C-+ resize-pane -D 5
# bind -n M-C-h resize-pane -L 5
# bind -n M-C-l resize-pane -R 5

bind -n C-∆ resize-pane -D 5
bind -n C-˚ resize-pane -U 5
bind -n M-f11 resize-pane -L 5
bind -n M-f12 resize-pane -R 5


bind a choose-window   # choose-tree
bind C-a choose-window # choose-tree
bind n last-window   # last pane
bind C-n last-window # last pane

# move between windows
bind -n C-t new-window -c "#{pane_current_path}"
# bind -n ∆ next-window       # option+j
# bind -n ˚ previous-window   # option+k
# bind -n M-j next-window     # option+j
# bind -n M-k previous-window # option+k

bind -n M-Down next-window    # option+j
bind -n M-Up previous-window  # option+k

bind C-x kill-pane

# enable mouse for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi
bind -Tcopy-mode-vi v if -F '#{selection_active}' 'send -X clear-selection' 'send -X begin-selection'
bind -Tcopy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -Tcopy-mode-vi Escape send -X cancel

bind Space if -F '#{pane_in_mode}' 'send-keys -X cancel' 'copy-mode; send-keys -X -N 3 cursor-up'
bind C-Space if -F '#{pane_in_mode}' 'send-keys -X cancel' 'copy-mode; send-keys -X -N 3 cursor-up'

bind p paste-buffer

bind-key e command-prompt "rename-window %%"
bind-key C-e command-prompt "rename-window %%"

bind-key m command-prompt -p "Go to:" "switch-client -t %%"
bind-key C-m command-prompt -p "Go to:" "switch-client -t %%"

# theme
set -g pane-active-border-style 'bg=default,fg=#424242'
set -g pane-border-style 'fg=#424242'

set -g status-position top
set -g status-interval 1
set -sg escape-time 10
set -g window-status-format ''
set -g window-status-current-format ''
#set -g status-left ''
#set -g window-status-separator ''
#set -g window-status-format '#(sysctl vm.loadavg | cut -d " " -f 3-5)'
#set -g status-style 'bg=default,fg=#666666'

# write output to file
bind-key w command-prompt -p 'save history to filename:' -I '~/output.log' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

set -g display-panes-colour '#424242'
set -g display-panes-active-colour '#424242'
# set -g status-left-length 51
set -g status-right-length 100

# active_window_bg=brightyellow
# active_window_fg=brightwhite
# side_color=white
# # set -g status-right "#{prefix_highlight}#[nobold,noitalics,nounderscore] #{window_name} | #{b:pane_current_path} #[fg=$side_color"
#set -g status-right "#{prefix_highlight}#[nobold,noitalics,nounderscore] #(gitmux -cfg ~/.gitmux.conf '#{pane_current_path}') #{b:pane_current_path} #[fg=$side_color"
# # set -g message-style "fg=$active_window_fg bg=$active_window_bg"
# # set -g message-command-style "fg=$active_window_bg bg=$active_window_fg"
# # set -g message-command-style "bg=green"
# # # set -g mode-style "bg=blue, fg=$active_window_fg"
set -g mode-style "bg=green,fg=black"
set -g status-right "#[fg=$gray] #(gitmux -cfg ~/.gitmux.conf '#{pane_current_path}') "

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'thepante/tmux-git-autofetch'
# set -g @plugin '2kabhishek/tmux2k'


# THEME
set-option -g status-style fg="#5FF1FF",bg=default
# set-option -g status-right-length 140
# set-option -g status-right " #[fg=blue,bg=default]%a %H:%M:%S #[default] #[fg=white]%Y-%m-%d"
# set -g status-right '#{echo "$bat_stat $bat_label"} | %a %h-%d %H:%M '


set -g @git-autofetch-logging 'false'
set -g @git-autofetch-skip-paths ".*"
set -g @git-autofetch-scan-paths "~/Projects/.*|.*\/probandoski"
# set -g @git-autofetch-skip-https 'true' # if true: will only fetch repos with ssh origin (unless specified in scan-paths)
# set -g @git-autofetch-skip-origins "['someuser']" # disables fetching from repo owner
# set -g @git-autofetch-scan-origins "['CompanyCo']" # enables fetching from repo owner | overrides skip-origins




# # TODO:
# set -g @plugin 'fcsonline/tmux-thumbs'
# run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux
# set -g @thumbs-unique true
# set -g @thumbs-reverse enabled
# set -g @thumbs-command 'echo -n {} | pbcopy'

set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git', 'man', 'tail']"
set -g @tmux_window_name_use_tilde "True"
set -g @continuum-restore 'on'
set -g @t-bind 'd'

# initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# run '~/.tmux/plugins/tmux-git-autofetch/git-autofetch.tmux'

